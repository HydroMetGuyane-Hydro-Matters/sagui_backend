# Generated by Django 4.0.5 on 2022-07-09 09:08

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('sagui', '0020_catchments_catchments_hyfaa_catch_geom_3e720d_idx_and_more'),
    ]

    operations = [
        migrations.RunSQL(
        """
--Create views related to catchments and rainfall
CREATE OR REPLACE VIEW guyane.hyfaa_catchments_subbasins AS
SELECT sub AS id, array_agg(mini) AS minibasins,ST_Union(geom)::geometry(Geometry, 4326) AS geom
FROM guyane.hyfaa_catchments
GROUP BY id;

DROP MATERIALIZED VIEW IF EXISTS guyane.rainfall_subbasin_aggregated_geo;
CREATE MATERIALIZED VIEW guyane.rainfall_subbasin_aggregated_geo AS 
WITH latest_dates AS (
	SELECT DISTINCT "date" FROM guyane.sagui_rainfall ORDER BY "date" DESC LIMIT 15
), 
rainfall_data AS (
	SELECT * FROM guyane.sagui_rainfall
	WHERE "date" in (SELECT * FROM latest_dates)
),
rainfall_catchments AS (
	SELECT c.mini, r."date", r.rain, c.sub
	FROM rainfall_data r JOIN guyane.hyfaa_catchments c
	ON r.cell_id = c.mini
),
rainfall_by_sub AS (
	SELECT sub AS id, "date", AVG(rain) AS rain
	FROM rainfall_catchments
	GROUP BY sub, "date"
),
agg AS (
	SELECT id, json_agg(json_build_object('date', "date", 'rain', round(rain)) ORDER BY "date" DESC) AS values
	FROM rainfall_by_sub
	GROUP BY id
)
SELECT geo.id, values, geom
FROM agg JOIN guyane.hyfaa_catchments_subbasins geo
ON geo.id = agg.id
;

DROP MATERIALIZED VIEW IF EXISTS guyane.rainfall_minibasin_aggregated_geo;
CREATE MATERIALIZED VIEW guyane.rainfall_minibasin_aggregated_geo AS 
WITH latest_dates AS (
	SELECT DISTINCT "date" FROM guyane.sagui_rainfall ORDER BY "date" DESC LIMIT 15
), 
rainfall_agg_data AS (
	SELECT cell_id AS id, json_agg(json_build_object('date', "date", 'rain', round(rain)) ORDER BY "date" DESC) AS values FROM guyane.sagui_rainfall
	WHERE "date" in (SELECT * FROM latest_dates)
	GROUP BY cell_id
)
SELECT agg.id, values, geom
FROM rainfall_agg_data agg JOIN guyane.hyfaa_catchments geo
ON geo.mini = agg.id
;
        """),
        migrations.RunSQL(
        """
-- MVT function
--
-- Display rainfall data depending on the zoom level (show subbasins or minibasins)
-- DROP FUNCTION guyane.mvt_catchments_with_rain_data;
CREATE OR REPLACE
FUNCTION guyane.mvt_catchments_with_rain_data(
            z integer, x integer, y integer)
RETURNS bytea
AS $$
DECLARE
    tblname text;
    result bytea;
BEGIN
    
    CASE

        WHEN z < 7 THEN
            tblname := 'guyane.rainfall_subbasin_aggregated_geo';
        ELSE
            tblname := 'guyane.rainfall_minibasin_aggregated_geo';
    END CASE;

  EXECUTE format('
    WITH
    bounds AS (
      SELECT ST_TileEnvelope($3, $1, $2) AS geom
    ),
    mvtgeom AS (
      SELECT d.id, d."values", ST_AsMVTGeom(ST_Transform(d.geom, 3857), bounds.geom) AS geom
      FROM %s d, bounds
      WHERE ST_Intersects(d.geom, ST_Transform(bounds.geom, 4326))
    )
    SELECT ST_AsMVT(mvtgeom, ''default'')

    FROM mvtgeom;
    ', tblname)
    USING x, y, z
    INTO result;

    RETURN result;
END;
$$
LANGUAGE 'plpgsql'
STABLE
PARALLEL SAFE;
        """),
        migrations.RunSQL(
            """
-- Update trigger on importstate table
--
-- Post processing trigger
CREATE OR REPLACE FUNCTION guyane.publication_post_processing()
    RETURNS TRIGGER LANGUAGE plpgsql
    SECURITY DEFINER
    AS $$
    BEGIN
        -- mgbstandard data
        IF NEW."tablename" LIKE '%data_mgbstandard' THEN
            RAISE INFO 'Triggering post-processing on mgbstandard table. Please wait...';
            PERFORM guyane.compute_expected_and_anomaly('guyane.hyfaa_data_mgbstandard', 'flow_mean', 10);
            REFRESH  MATERIALIZED VIEW guyane.hyfaa_data_with_mgbstandard_aggregate_geo;
        END IF;

        -- assimilated data
        IF NEW."tablename" LIKE '%data_assimilated' THEN
            RAISE INFO 'Triggering post-processing on assimilated table. Please wait...';
            PERFORM guyane.compute_expected_and_anomaly('guyane.hyfaa_data_assimilated', 'flow_median', 10);
            REFRESH  MATERIALIZED VIEW guyane.hyfaa_data_with_assim_aggregate_geo;
        END IF;

        -- rainfall data
        IF NEW."tablename" LIKE '%_rainfall' THEN
            RAISE INFO 'Triggering post-processing on rainfall table. Please wait...';
            REFRESH  MATERIALIZED VIEW guyane.rainfall_subbasin_aggregated_geo;
            REFRESH  MATERIALIZED VIEW guyane.rainfall_minibasin_aggregated_geo;
        END IF;

        RETURN null;
    END $$;

            """),
    ]